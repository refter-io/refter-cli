name: main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v2

      - name: initialize python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: initialize poetry
        uses: Gr1N/setup-poetry@v8

      - uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: install dependencies
        run: make install

      - name: check code
        run: make check

      - name: test code
        run: make test

      - name: configure pypi
        if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
        run: poetry config pypi-token.pypi "${{ secrets.PYPI_PASSWORD }}"

      - name: publish to pypi
        if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
        run: poetry publish
